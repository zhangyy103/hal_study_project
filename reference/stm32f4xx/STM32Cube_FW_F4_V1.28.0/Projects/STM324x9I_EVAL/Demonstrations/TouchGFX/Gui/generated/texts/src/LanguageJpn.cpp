#include <stdint.h>
#include <touchgfx/Unicode.hpp>

#ifndef NO_USING_NAMESPACE_TOUCHGFX
using namespace touchgfx;
#endif

extern const touchgfx::Unicode::UnicodeChar T_Graph_y_value_Ukr[];
extern const touchgfx::Unicode::UnicodeChar T_Percentage_Bar_readout_Ukr[];
extern const touchgfx::Unicode::UnicodeChar T_Three_Way_Progress_bar_status_Ukr[];
extern const touchgfx::Unicode::UnicodeChar T_Three_Way_Progress_Bar_Percentage_Ukr[];
extern const touchgfx::Unicode::UnicodeChar T_Demo_View_Mcu_Load_text_small_Ukr[];

// Language Jpn: No substitution
TEXT_LOCATION_FLASH_PRAGMA
KEEP const touchgfx::Unicode::UnicodeChar T_Poster_Headline_00_Jpn[13] TEXT_LOCATION_FLASH_ATTRIBUTE = { 0x54, 0x6f, 0x75, 0x63, 0x68, 0x47, 0x46, 0x58, 0x306b, 0x3064, 0x3044, 0x3066, 0x0 };
TEXT_LOCATION_FLASH_PRAGMA
KEEP const touchgfx::Unicode::UnicodeChar T_Poster_Text_00_Jpn[201] TEXT_LOCATION_FLASH_ATTRIBUTE = { 0x43, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x2d, 0x4d, 0x306e, 0x3088, 0x3046, 0x306a, 0x4f4e, 0x30b3, 0x30b9, 0x30c8, 0x306e, 0x30cf, 0x30fc, 0x30c9, 0xa, 0x30a6, 0x30a7, 0x30a2, 0x306b, 0x304a, 0x3044, 0x3066, 0x3001, 0x30b0, 0x30e9, 0x30d5, 0x30a3, 0x30ab, 0x30eb, 0x30fb, 0xa, 0x30e6, 0x30fc, 0x30b6, 0x30fc, 0x30fb, 0x30a4, 0x30f3, 0x30bf, 0x30fc, 0x30d5, 0x30a7, 0x30fc, 0x30b9, 0x6027, 0x80fd, 0x3092, 0xa, 0x89e3, 0x304d, 0x653e, 0x3064, 0x3001, 0x30e6, 0x30cb, 0x30fc, 0x30af, 0x306a, 0x30bd, 0x30d5, 0x30c8, 0x30a6, 0x30a7, 0x30a2, 0xa, 0x30d5, 0x30ec, 0x30fc, 0x30e0, 0x30ef, 0x30fc, 0x30af, 0x3067, 0x3059, 0x3002, 0xa, 0xa, 0x9769, 0x65b0, 0x7684, 0x306a, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x47, 0x46, 0x58, 0x30c6, 0x30af, 0x30ce, 0x30ed, 0x30b8, 0x30fc, 0x306f, 0x3001, 0xa, 0x73fe, 0x884c, 0x306e, 0x30de, 0x30a4, 0x30af, 0x30ed, 0x30b3, 0x30f3, 0x30c8, 0x30ed, 0x30fc, 0x30e9, 0x306e, 0x5236, 0x7d04, 0xa, 0x3092, 0x6253, 0x3061, 0x7834, 0x308a, 0x307e, 0x3059, 0x3002, 0x30e6, 0x30cb, 0x30c3, 0x30c8, 0x5358, 0x4fa1, 0x306e, 0xa, 0x307b, 0x3093, 0x306e, 0x4e00, 0x90e8, 0x3060, 0x3051, 0x3067, 0x3001, 0x4eca, 0x65e5, 0x306e, 0x30b9, 0x30de, 0x30fc, 0x30c8, 0xa, 0x30d5, 0x30a9, 0x30f3, 0x57fa, 0x6e96, 0x3092, 0x6e80, 0x305f, 0x3059, 0x3001, 0x6d17, 0x7df4, 0x3055, 0x308c, 0x305f, 0xa, 0x7d44, 0x8fbc, 0x307f, 0x30c7, 0x30a3, 0x30b9, 0x30d7, 0x30ec, 0x30a4, 0x30bd, 0x30ea, 0x30e5, 0x30fc, 0x30b7, 0x30e7, 0x30f3, 0xa, 0x3092, 0x5275, 0x9020, 0x3057, 0x3066, 0x3044, 0x305f, 0x3060, 0x3051, 0x307e, 0x3059, 0x3002, 0xa, 0x0 };
TEXT_LOCATION_FLASH_PRAGMA
KEEP const touchgfx::Unicode::UnicodeChar T_Poster_Headline_01_Jpn[9] TEXT_LOCATION_FLASH_ATTRIBUTE = { 0x30a2, 0x30eb, 0x30d5, 0x30a1, 0x30d6, 0x30ec, 0x30f3, 0x30c9, 0x0 };
TEXT_LOCATION_FLASH_PRAGMA
KEEP const touchgfx::Unicode::UnicodeChar T_Poster_Text_01_Jpn[159] TEXT_LOCATION_FLASH_ATTRIBUTE = { 0x30a2, 0x30eb, 0x30d5, 0x30a1, 0x30d6, 0x30ec, 0x30f3, 0x30c9, 0x3068, 0x306f, 0x3001, 0x753b, 0x50cf, 0x3068, 0x80cc, 0x666f, 0xa, 0x306e, 0x5408, 0x6210, 0x306b, 0x3088, 0x308a, 0x753b, 0x50cf, 0x306e, 0x90e8, 0x5206, 0x7684, 0x306a, 0x9732, 0x51fa, 0x3001, 0xa, 0x307e, 0x305f, 0x306f, 0x5b8c, 0x5168, 0x306a, 0x900f, 0x904e, 0x3092, 0x884c, 0x3046, 0x51e6, 0x7406, 0x3067, 0x3059, 0x3002, 0xa, 0xa, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x47, 0x46, 0x58, 0x306f, 0x3001, 0x6700, 0x5c0f, 0x9650, 0x306e, 0x4d, 0x43, 0x55, 0x8ca0, 0x8377, 0x3067, 0xa, 0x30d4, 0x30af, 0x30bb, 0x30eb, 0x5358, 0x4f4d, 0x3067, 0x306e, 0x30a2, 0x30eb, 0x30d5, 0x30a1, 0x30d6, 0x30ec, 0x30f3, 0x30c9, 0xa, 0x3092, 0x30b5, 0x30dd, 0x30fc, 0x30c8, 0x3057, 0x307e, 0x3059, 0x3002, 0x3053, 0x306e, 0x6a5f, 0x80fd, 0x306f, 0x3042, 0x306a, 0xa, 0x305f, 0x306e, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x47, 0x46, 0x58, 0x30a2, 0x30d7, 0x30ea, 0x30b1, 0x30fc, 0x30b7, 0x30e7, 0x30f3, 0x306b, 0xa, 0x304a, 0x3044, 0x3066, 0x3001, 0x753b, 0x50cf, 0x306e, 0x30b9, 0x30e0, 0x30fc, 0x30b8, 0x30f3, 0x30b0, 0x3068, 0xa, 0x30a2, 0x30cb, 0x30e1, 0x30fc, 0x30b7, 0x30e7, 0x30f3, 0x3092, 0x53ef, 0x80fd, 0x306b, 0x3057, 0x307e, 0x3059, 0x3002, 0xa, 0x0 };
TEXT_LOCATION_FLASH_PRAGMA
KEEP const touchgfx::Unicode::UnicodeChar T_Poster_Headline_02_Jpn[11] TEXT_LOCATION_FLASH_ATTRIBUTE = { 0x30d5, 0x30a9, 0x30f3, 0x30c8, 0x304a, 0x3088, 0x3073, 0x8a00, 0x8a9e, 0xa, 0x0 };
TEXT_LOCATION_FLASH_PRAGMA
KEEP const touchgfx::Unicode::UnicodeChar T_Poster_Text_02_Jpn[203] TEXT_LOCATION_FLASH_ATTRIBUTE = { 0x54, 0x6f, 0x75, 0x63, 0x68, 0x47, 0x46, 0x58, 0x306f, 0x591a, 0x8a00, 0x8a9e, 0x4ed5, 0x69d8, 0x3068, 0x306a, 0x3063, 0x3066, 0x304a, 0x308a, 0x3001, 0xa, 0x30e9, 0x30c6, 0x30f3, 0x8a9e, 0x3001, 0x30ad, 0x30ea, 0x30eb, 0x6587, 0x5b57, 0x3001, 0x4e2d, 0x56fd, 0x8a9e, 0x3084, 0xa, 0x65e5, 0x672c, 0x8a9e, 0x306e, 0x3088, 0x3046, 0x306a, 0x6587, 0x5b57, 0x4f53, 0x7cfb, 0x306b, 0x3082, 0x5bfe, 0x5fdc, 0x3057, 0xa, 0x307e, 0x3059, 0x3002, 0x7ffb, 0x8a33, 0x6587, 0x306f, 0x5206, 0x96e2, 0x3055, 0x308c, 0x305f, 0x30c6, 0x30ad, 0x30b9, 0x30c8, 0xa, 0x30b9, 0x30d7, 0x30ec, 0x30c3, 0x30c9, 0x30b7, 0x30fc, 0x30c8, 0x306b, 0x3066, 0x5bb9, 0x6613, 0x306b, 0x7ba1, 0x7406, 0xa, 0x3059, 0x308b, 0x3053, 0x3068, 0x304c, 0x3067, 0x304d, 0x307e, 0x3059, 0x3002, 0xa, 0xa, 0x7d71, 0x5408, 0x30d5, 0x30a9, 0x30f3, 0x30c8, 0x30b3, 0x30f3, 0x30d0, 0x30fc, 0x30bf, 0x306f, 0x3001, 0xa, 0x30b3, 0x30f3, 0x30d1, 0x30a4, 0x30eb, 0x3059, 0x308b, 0x969b, 0x306b, 0x4efb, 0x610f, 0x306e, 0x54, 0x72, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0xa, 0x30d5, 0x30a9, 0x30f3, 0x30c8, 0x304b, 0x3089, 0x5185, 0x90e8, 0x8868, 0x73fe, 0x30b3, 0x30fc, 0x30c9, 0x3092, 0x751f, 0x6210, 0xa, 0x3057, 0x307e, 0x3059, 0x3002, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x47, 0x46, 0x58, 0x306f, 0x6587, 0x5b57, 0x306e, 0x914d, 0x7f6e, 0x3092, 0xa, 0x8abf, 0x6574, 0x3059, 0x308b, 0x305f, 0x3081, 0x306b, 0x30d5, 0x30a9, 0x30f3, 0x30c8, 0x4f9d, 0x5b58, 0x306e, 0xa, 0x30ab, 0x30fc, 0x30cb, 0x30f3, 0x30b0, 0x60c5, 0x5831, 0x3092, 0x4f7f, 0x7528, 0x3057, 0x307e, 0x3059, 0x3002, 0xa, 0x0 };

TEXT_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::Unicode::UnicodeChar* const textsJpn[55] TEXT_LOCATION_FLASH_ATTRIBUTE =
{
T_Demo_View_Mcu_Load_text_small_Ukr,
T_Three_Way_Progress_Bar_Percentage_Ukr,
T_Demo_View_Mcu_Load_text_small_Ukr,
T_Three_Way_Progress_Bar_Percentage_Ukr,
T_Poster_Headline_00_Jpn,
T_Poster_Text_00_Jpn,
T_Poster_Headline_01_Jpn,
T_Poster_Text_01_Jpn,
T_Poster_Headline_02_Jpn,
T_Poster_Text_02_Jpn,
T_Three_Way_Progress_Bar_Percentage_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Percentage_Bar_readout_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Graph_y_value_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Three_Way_Progress_bar_status_Ukr,
T_Percentage_Bar_readout_Ukr
};

